// Code generated by mockigo. DO NOT EDIT.

package data

import match "github.com/subtle-byte/mockigo/match"
import mock "github.com/subtle-byte/mockigo/mock"
import testdata "github.com/subtle-byte/mockigo/internal/generator/testdata"
import time "time"

var _ = match.Any[int]

type SimpleInterface struct {
	mock *mock.Mock
}

func NewSimpleInterface(t mock.Testing) *SimpleInterface {
	t.Helper()
	return &SimpleInterface{mock: mock.NewMock(t)}
}

type _SimpleInterface_Expecter struct {
	mock *mock.Mock
}

func (_mock *SimpleInterface) EXPECT() _SimpleInterface_Expecter {
	 return _SimpleInterface_Expecter{mock: _mock.mock}
}

type _SimpleInterface_Foo_Call struct {
	*mock.Call
}

func (_mock *SimpleInterface) Foo(_a0 time.Time) (testdata.Nilable, error) {
	_mock.mock.T.Helper()
	_results := _mock.mock.Called("Foo", _a0)
	var _r0 testdata.Nilable
	if _got := _results.Get(0); _got != nil {
		_r0 = _got.(testdata.Nilable)
	}
	_r1 := _results.Error(1)
	return _r0, _r1
}

func (_expecter _SimpleInterface_Expecter) Foo(_a0 match.Arg[time.Time]) _SimpleInterface_Foo_Call {
	return _SimpleInterface_Foo_Call{Call: _expecter.mock.ExpectCall("Foo", _a0.Arg)}
}

func (_call _SimpleInterface_Foo_Call) Return(_r0 testdata.Nilable, _r1 error) _SimpleInterface_Foo_Call {
	_call.Call.Return(_r0, _r1)
	return _call
}

func (_call _SimpleInterface_Foo_Call) RunReturn(f func(time.Time) (testdata.Nilable, error)) _SimpleInterface_Foo_Call {
	_call.Call.RunReturn(f)
	return _call
}
